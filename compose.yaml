
networks:
  local-network:
    name: local-network
    driver: bridge

services:
  httpd:
    container_name: app.application.apache
    build: './docker/apache'
    networks:
      - local-network
    depends_on:
      - php-fpm
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www/html/

  php-fpm:
    container_name: app.application.php
    build:
      context: .
      dockerfile: './docker/php/Dockerfile'
      args:
        - APP_ENV=${APP_ENV}
    depends_on:
      database:
        condition: service_healthy
    networks:
       - local-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      PHP_IDE_CONFIG: 'serverName=host.docker.internal'
      XDEBUG_TRIGGER: 1
    volumes:
      - ./:/var/www/html/
#      - ./docker/php/upload.ini:/usr/local/etc/php/conf.d/custom.ini
#      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    tty: true

  database:
    container_name: app.application.postgres
    image: postgres:16.3-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-symfony7_db}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    ports:
      - "32769:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
     - local-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-symfony7_db}", "-U", "${POSTGRES_USER:-postgres}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: always

volumes:
  database_data: