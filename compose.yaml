networks:
  default:
    name: ${COMPOSE_PROJECT_NAME}-default-network


services:
  apache:
    container_name: ${COMPOSE_PROJECT_NAME}.apache
    build: './docker/apache'
    networks:
      - default
    depends_on:
      - php-fpm
    ports:
      - "8001:80"
    volumes:
      - ./:/var/www/html/
      - ./docker/apache/vhost.conf:/usr/local/apache2/conf/app.conf
    restart: unless-stopped


  php-fpm:
    container_name: ${COMPOSE_PROJECT_NAME}.fpm-php
    build:
      context: .
      dockerfile: './docker/php/Dockerfile'
      args:
        - APP_ENV=${APP_ENV}
    depends_on:
      database:
        condition: service_healthy
    networks:
       - default
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      PHP_IDE_CONFIG: 'serverName=host.docker.internal'
      XDEBUG_TRIGGER: ${XDEBUG_TRIGGER:-1}
    volumes:
      - ./:/var/www/html/
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
    restart: unless-stopped

  database:
    container_name: app.application.postgres
    image: postgres:16.3-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-symfony7_db}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
    ports:
      - "32769:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
     - default
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-symfony7_db}", "-U", "${POSTGRES_USER:-postgres}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    restart: always


  elasticsearch:
    container_name: ${COMPOSE_PROJECT_NAME}.elasticsearch
    image: elasticsearch:7.17.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - discovery.type=single-node
    volumes:
      - ./docker/elasticsearch/data:/usr/share/elasticsearch/data:rw
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
    networks:
      - default
    restart: unless-stopped

    
  kibana:
    container_name: ${COMPOSE_PROJECT_NAME}.kibana
    image: kibana:7.17.0
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - default
    restart: unless-stopped


  redis:
    container_name: ${COMPOSE_PROJECT_NAME}.redis
    image: redis:7.2
    command: redis-server
    volumes:
      - ./docker/redis/data:/data
    networks:
      - default
    restart: unless-stopped
